{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nvar web3;\n\nif (true && typeof window.web3 !== 'undefined') {\n  //������ΪMetamask����˽������ɵ����Ӳ����˻�������\n  window.addEventListener('load', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var ethereum;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context.next = 4;\n              break;\n            }\n\n            ethereum = window.ethereum;\n            _context.next = 4;\n            return ethereum.enable();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))); //alert('web3 is currentProvider');\n\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //alert('web3 is infura');\n  var provider = new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/caae5d1a13ce42d28ad5cd28a0422d20\");\n  web3 = new Web3(provider);\n} // export the web3 instance\n\n\nexport default web3;","map":{"version":3,"sources":["D:/mycode/blockchain/fullstackdapp/ethereum/web3.js"],"names":["Web3","web3","window","addEventListener","ethereum","enable","currentProvider","provider","providers","HttpProvider"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,IAAIC,IAAJ;;AAEA,IAAI,QAAiC,OAAOC,MAAM,CAACD,IAAd,KAAuB,WAA5D,EAAyE;AAErE;AACAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,wEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAExBD,MAAM,CAACE,QAFiB;AAAA;AAAA;AAAA;;AAGpBA,YAAAA,QAHoB,GAGTF,MAAM,CAACE,QAHE;AAAA;AAAA,mBAIlBA,QAAQ,CAACC,MAAT,EAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC,IAHqE,CAWrE;;AACAJ,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYK,eAArB,CAAP;AACH,CAbD,MAcK;AACD;AACA,MAAMC,QAAQ,GAAG,IAAIP,IAAI,CAACQ,SAAL,CAAeC,YAAnB,iEAAjB;AAGAR,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASO,QAAT,CAAP;AACH,C,CAED;;;AACA,eAAeN,IAAf","sourcesContent":["import Web3 from 'web3'\nlet web3\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n\n    //������ΪMetamask����˽������ɵ����Ӳ����˻�������\n    window.addEventListener('load', async () => {\n        // Modern dapp browsers...\n        if (window.ethereum) {\n            let ethereum = window.ethereum;\n            await ethereum.enable();\n        }\n    });\n\n    //alert('web3 is currentProvider');\n    web3 = new Web3(window.web3.currentProvider);\n}\nelse {\n    //alert('web3 is infura');\n    const provider = new Web3.providers.HttpProvider(\n      `https://ropsten.infura.io/v3/caae5d1a13ce42d28ad5cd28a0422d20`\n    )\n    web3 = new Web3(provider);\n}\n\n// export the web3 instance\nexport default web3;"]},"metadata":{},"sourceType":"module"}