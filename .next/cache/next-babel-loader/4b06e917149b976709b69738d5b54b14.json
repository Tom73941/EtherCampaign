{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// JavaScript source code\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/Campaign';\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const camp = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await camp.methods.approvalRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const camp = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await camp.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    return __jsx(Row, {\n      disabled: request.compelete\n    }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipients), __jsx(Cell, null, request.approvalCount, \" / \", approversCount), __jsx(Cell, null, request.compelete ? null : __jsx(Button, {\n      color: \"green\",\n      onClick: this.onApprove\n    }, \"\\u540C\\u610F\")), __jsx(Cell, null, request.compelete ? null : __jsx(Button, {\n      color: \"teal\",\n      onClick: this.onFinalize\n    }, \"\\u5B8C\\u6210\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["D:/mycode/blockchain/fullstackdapp/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Campaign","RequestRow","camp","props","address","accounts","eth","getAccounts","methods","approvalRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","compelete","description","utils","fromWei","value","recipients","approvalCount","onApprove","onFinalize"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAkC;AAAA;AAAA;;AAAA,uCAElB,YAAS;AACjB,YAAMM,IAAI,GAAGF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAArB;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,IAAI,CAACM,OAAL,CAAaC,eAAb,CAA6B,KAAKN,KAAL,CAAWO,EAAxC,EAA4CC,IAA5C,CAAiD;AAACC,QAAAA,IAAI,EAACP,QAAQ,CAAC,CAAD;AAAd,OAAjD,CAAN;AACH,KAN6B;;AAAA,wCAOjB,YAAS;AAClB,YAAMH,IAAI,GAAGF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAArB;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,IAAI,CAACM,OAAL,CAAaK,eAAb,CAA6B,KAAKV,KAAL,CAAWO,EAAxC,EAA4CC,IAA5C,CAAiD;AAACC,QAAAA,IAAI,EAACP,QAAQ,CAAC,CAAD;AAAd,OAAjD,CAAN;AACH,KAX6B;AAAA;;AAa9BS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,GAAD;AAAKC,MAAAA;AAAL,QAAanB,KAAnB;AACA,UAAM;AAACa,MAAAA,EAAD;AAAKO,MAAAA,OAAL;AAAcC,MAAAA;AAAd,QAAgC,KAAKf,KAA3C;AACA,WACI,MAAC,GAAD;AAAK,MAAA,QAAQ,EAAEc,OAAO,CAACE;AAAvB,OACI,MAAC,IAAD,QAAOT,EAAP,CADJ,EAEI,MAAC,IAAD,QAAOO,OAAO,CAACG,WAAf,CAFJ,EAGI,MAAC,IAAD,QAAOrB,IAAI,CAACsB,KAAL,CAAWC,OAAX,CAAmBL,OAAO,CAACM,KAA3B,EAAiC,OAAjC,CAAP,CAHJ,EAII,MAAC,IAAD,QAAON,OAAO,CAACO,UAAf,CAJJ,EAKI,MAAC,IAAD,QAAOP,OAAO,CAACQ,aAAf,SAAiCP,cAAjC,CALJ,EAMI,MAAC,IAAD,QAEQD,OAAO,CAACE,SAAR,GAAkB,IAAlB,GAAwB,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,KAAKO;AAApC,sBAFhC,CANJ,EAWI,MAAC,IAAD,QAEQT,OAAO,CAACE,SAAR,GAAkB,IAAlB,GAAwB,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKQ;AAAnC,sBAFhC,CAXJ,CADJ;AAoBH;;AApC6B;;AAuClC,eAAe1B,UAAf","sourcesContent":["// JavaScript source code\r\nimport React,{Component} from 'react';\r\nimport { Table,Button } from 'semantic-ui-react';\r\nimport web3 from '../ethereum/web3';\r\nimport Campaign from '../ethereum/Campaign';\r\n\r\nclass RequestRow extends Component{\r\n\r\n    onApprove = async()=>{\r\n        const camp = Campaign(this.props.address);\r\n        const accounts = await web3.eth.getAccounts();\r\n        await camp.methods.approvalRequest(this.props.id).send({from:accounts[0]});\r\n    }\r\n    onFinalize = async()=>{\r\n        const camp = Campaign(this.props.address);\r\n        const accounts = await web3.eth.getAccounts();\r\n        await camp.methods.finalizeRequest(this.props.id).send({from:accounts[0]});\r\n    } \r\n\r\n    render(){\r\n        const {Row,Cell} = Table;\r\n        const {id, request, approversCount} = this.props;\r\n        return (\r\n            <Row disabled={request.compelete}>\r\n                <Cell>{id}</Cell>            \r\n                <Cell>{request.description}</Cell>            \r\n                <Cell>{web3.utils.fromWei(request.value,'ether')}</Cell>      \r\n                <Cell>{request.recipients}</Cell>      \r\n                <Cell>{request.approvalCount} / {approversCount}</Cell>      \r\n                <Cell>\r\n                    {\r\n                        request.compelete?null:(<Button color=\"green\" onClick={this.onApprove}>同意</Button>)\r\n                    }\r\n                </Cell>\r\n                <Cell>\r\n                    {\r\n                        request.compelete?null:(<Button color=\"teal\" onClick={this.onFinalize}>完成</Button>)\r\n                    }\r\n                </Cell>\r\n            </Row>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default RequestRow;\r\n        "]},"metadata":{},"sourceType":"module"}